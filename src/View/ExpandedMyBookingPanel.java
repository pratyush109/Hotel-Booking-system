/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.BookingModel;
import com.toedter.calendar.JDateChooser;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;


/**
 *
 * @author Dell
 */
public class ExpandedMyBookingPanel extends javax.swing.JPanel{

    /**
     * Creates new form MyBookingPanel
     */
    public ExpandedMyBookingPanel() {
        initComponents();
//        String bookingId = this.getBookingId();
//        loadBookingData(bookingId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        roomType_field = new javax.swing.JTextField();
        bookingId = new javax.swing.JTextField();
        customerId = new javax.swing.JTextField();
        guests = new javax.swing.JTextField();
        checkInDate = new javax.swing.JTextField();
        checkOutDate = new javax.swing.JTextField();
        payNow = new javax.swing.JButton();
        checkInDateCalendar = new com.toedter.calendar.JDateChooser();
        checkOutDateCalendar = new com.toedter.calendar.JDateChooser();
        roomType_comboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        roomNumber_field = new javax.swing.JTextField();
        guestSpinner = new javax.swing.JSpinner();
        editBookingButton = new javax.swing.JButton();
        cancelBookingButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel2.setText("My Booking");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profile.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setText("Booking info.");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setText("Booking Id :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setText("Room Type :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel6.setText("Customer Id :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel7.setText("Guests :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel8.setText("Check-in :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel9.setText("Check-out :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel10.setText("Price :");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel11.setText("Status :");

        price.setText("price");

        status.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        status.setText("status");

        roomType_field.setEditable(false);
        roomType_field.setBackground(new java.awt.Color(255, 255, 255));
        roomType_field.setText("roomType");
        roomType_field.setBorder(null);

        bookingId.setEditable(false);
        bookingId.setBackground(new java.awt.Color(255, 255, 255));
        bookingId.setBorder(null);
        bookingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingIdActionPerformed(evt);
            }
        });

        customerId.setEditable(false);
        customerId.setBackground(new java.awt.Color(255, 255, 255));
        customerId.setText("customerId");
        customerId.setBorder(null);

        guests.setEditable(false);
        guests.setBackground(new java.awt.Color(255, 255, 255));
        guests.setText("guests");
        guests.setBorder(null);

        checkInDate.setEditable(false);
        checkInDate.setText("check-in-date");
        checkInDate.setBorder(null);

        checkOutDate.setEditable(false);
        checkOutDate.setText("check-out-date");
        checkOutDate.setBorder(null);

        payNow.setBackground(new java.awt.Color(48, 47, 47));
        payNow.setForeground(new java.awt.Color(255, 255, 255));
        payNow.setText("Pay now");
        payNow.setFocusable(false);
        payNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payNowActionPerformed(evt);
            }
        });

        checkInDateCalendar.setBackground(new java.awt.Color(255, 255, 255));
        checkInDateCalendar.setEnabled(false);
        checkInDateCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkInDateCalendarPropertyChange(evt);
            }
        });

        checkOutDateCalendar.setBackground(new java.awt.Color(255, 255, 255));
        checkOutDateCalendar.setEnabled(false);
        checkOutDateCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkOutDateCalendarPropertyChange(evt);
            }
        });

        roomType_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Deluxe", "Super Deluxe" }));
        roomType_comboBox.setEnabled(false);
        roomType_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomType_comboBoxActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel13.setText("Room number :");

        roomNumber_field.setEditable(false);
        roomNumber_field.setBackground(new java.awt.Color(255, 255, 255));
        roomNumber_field.setBorder(null);
        roomNumber_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumber_fieldActionPerformed(evt);
            }
        });

        guestSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        guestSpinner.setEnabled(false);
        guestSpinner.setOpaque(true);
        guestSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                guestSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(14, 14, 14)
                                .addComponent(roomType_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(bookingId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(customerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guestSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(checkInDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(checkInDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(price)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(status)
                                        .addGap(18, 18, 18)
                                        .addComponent(payNow))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkOutDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomNumber_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(136, 136, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bookingId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(roomType_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(roomType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(roomNumber_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(customerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(guests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guestSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(checkInDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkInDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(checkOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkOutDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(price)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(status)
                    .addComponent(payNow, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        editBookingButton.setBackground(new java.awt.Color(72, 99, 127));
        editBookingButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        editBookingButton.setForeground(new java.awt.Color(217, 217, 217));
        editBookingButton.setText("Edit booking");
        editBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBookingButtonActionPerformed(evt);
            }
        });

        cancelBookingButton.setBackground(new java.awt.Color(194, 111, 111));
        cancelBookingButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        cancelBookingButton.setForeground(new java.awt.Color(217, 217, 217));
        cancelBookingButton.setText("Cancel booking");
        cancelBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookingButtonActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/usericon.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(editBookingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelBookingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(62, 62, 62)
                .addComponent(jLabel12)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel12)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editBookingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBookingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBookingButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBookingButtonActionPerformed

    private void cancelBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookingButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelBookingButtonActionPerformed

    private void bookingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingIdActionPerformed

    private void payNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payNowActionPerformed
        // TODO add your handling code here:
        
        PaymentPage paymentPage = new PaymentPage(Integer.parseInt(bookingId.getText()));
        paymentPage.setVisible(true);
        
        payNow.setEnabled(false);
        
              
    }//GEN-LAST:event_payNowActionPerformed

    private void checkInDateCalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkInDateCalendarPropertyChange
   if("date".equals(evt.getPropertyName())) {
            Date selectedDate = checkInDateCalendar.getDate();
            if(selectedDate != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String formattedDate = sdf.format(selectedDate);
                checkInDate.setText(formattedDate);

            } else {
                checkInDate.setText("");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkInDateCalendarPropertyChange

    private void checkOutDateCalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkOutDateCalendarPropertyChange
        // TODO add your handling code here:
             if("date".equals(evt.getPropertyName())) {
            Date selectedDate = checkOutDateCalendar.getDate();
            if(selectedDate != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String formattedDate = sdf.format(selectedDate);
                checkOutDate.setText(formattedDate);

            } else {
                checkOutDate.setText("");
            }
        }
    }//GEN-LAST:event_checkOutDateCalendarPropertyChange

    private void roomType_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomType_comboBoxActionPerformed
        // TODO add your handling code here
        String selectedRoomType = roomType_comboBox.getSelectedItem().toString();
        roomType_field.setText(selectedRoomType);
    }//GEN-LAST:event_roomType_comboBoxActionPerformed

    private void roomNumber_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumber_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNumber_fieldActionPerformed

    private void guestSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_guestSpinnerStateChanged
        // TODO add your handling code here:
        int value = (int)guestSpinner.getValue();
        guests.setText(String.valueOf(value));
    }//GEN-LAST:event_guestSpinnerStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookingId;
    private javax.swing.JButton cancelBookingButton;
    private javax.swing.JTextField checkInDate;
    private com.toedter.calendar.JDateChooser checkInDateCalendar;
    private javax.swing.JTextField checkOutDate;
    private com.toedter.calendar.JDateChooser checkOutDateCalendar;
    private javax.swing.JTextField customerId;
    private javax.swing.JButton editBookingButton;
    private javax.swing.JSpinner guestSpinner;
    private javax.swing.JTextField guests;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton payNow;
    private javax.swing.JLabel price;
    private javax.swing.JTextField roomNumber_field;
    private javax.swing.JComboBox<String> roomType_comboBox;
    private javax.swing.JTextField roomType_field;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables


public void addEditBookingListener(ActionListener listener) {
    editBookingButton.addActionListener(listener); 
}

public void setFieldsEditable(boolean editable) {
    roomType_comboBox.setEnabled(editable);
    guestSpinner.setEnabled(editable);       
    checkInDateCalendar.setEnabled(editable);
    checkOutDateCalendar.setEnabled(editable);     
}

public void setEditButtonText(String text) {
    editBookingButton.setText(text);
}


public String getBookingId() {
    return bookingId.getText();
}

public String getRoomType() {
    return roomType_field.getText();
}

public int getGuestCount() {
    return Integer.parseInt(guests.getText());
}

public String getCheckInDate() {
    return checkInDate.getText();
}

public String getCheckOutDate() {
    return checkOutDate.getText();
}


public JDateChooser getCheckInDateCalendar() {
    return checkInDateCalendar;
}

public JDateChooser getCheckOutDateCalendar() {
    return checkOutDateCalendar;
}

public JComboBox<String> getRoomTypeComboBox() {
    return roomType_comboBox;
}

public JSpinner getGuestSpinner() {
    return guestSpinner;
}


public void setBookingData(BookingModel booking) {
    bookingId.setText(String.valueOf(booking.getBookingId()));
    roomNumber_field.setText(String.valueOf(booking.getRoomId()));
    roomType_field.setText(booking.getRoomType());
    customerId.setText(String.valueOf(booking.getUserId()));
    guests.setText(String.valueOf(booking.getGuestCount()));
    checkInDate.setText(booking.getCheckInDate());
    checkOutDate.setText(booking.getCheckOutDate());
    price.setText(String.valueOf(booking.getPrice()));
    status.setText(booking.getStatus());
    
     if ("Cancelled".equalsIgnoreCase(booking.getStatus()) || "Paid and Booked".equalsIgnoreCase(booking.getStatus())) {
        editBookingButton.setEnabled(false);
        payNow.setEnabled(false);
    } else {
        editBookingButton.setEnabled(true);
        payNow.setEnabled(true);


    }
  
}

public String getSelectedRoomType() {
    return roomType_comboBox.getSelectedItem().toString();
}

public int getSpinnerGuestCount() {
    return (Integer) guestSpinner.getValue();
}

public Date getSelectedCheckInDate() {
    return checkInDateCalendar.getDate();
}

public Date getSelectedCheckOutDate() {
    return checkOutDateCalendar.getDate();
}

public JButton getEditBookingButton() {
    return editBookingButton;
}

 
public JLabel getPriceLabel() {
    return price; 
}

public JLabel getStatusLabel() {
    return status; 
}
 
public void refreshDisplay(BookingModel bookingModel) {
    try {
        setBookingData(bookingModel);
        
        roomType_comboBox.setSelectedItem(bookingModel.getRoomType());
        guestSpinner.setValue(bookingModel.getGuestCount());
        
        roomNumber_field.setText(String.valueOf(bookingModel.getRoomId()));
        
        if (bookingModel.getCheckInDate() != null && !bookingModel.getCheckInDate().isEmpty()) {
            try {
                java.sql.Date checkInSqlDate = java.sql.Date.valueOf(bookingModel.getCheckInDate());
                checkInDateCalendar.setDate(new Date(checkInSqlDate.getTime()));
            } catch (IllegalArgumentException e) {
                System.err.println("Error parsing check-in date: " + bookingModel.getCheckInDate());
            }
        }
        
        if (bookingModel.getCheckOutDate() != null && !bookingModel.getCheckOutDate().isEmpty()) {
            try {
                java.sql.Date checkOutSqlDate = java.sql.Date.valueOf(bookingModel.getCheckOutDate());
                checkOutDateCalendar.setDate(new Date(checkOutSqlDate.getTime()));
            } catch (IllegalArgumentException e) {
                System.err.println("Error parsing check-out date: " + bookingModel.getCheckOutDate());
            }
        }
        
        this.revalidate();
        this.repaint();
        
        System.out.println("Display refreshed successfully with updated booking information");
        
    } catch (Exception e) {
        System.err.println("Error refreshing display: " + e.getMessage());
        e.printStackTrace();
        
        // Show error message to user
        JOptionPane.showMessageDialog(this, 
            "Error refreshing display: " + e.getMessage(), 
            "Display Error", 
            JOptionPane.ERROR_MESSAGE);
    }
}
public void addCancelBookingListener(ActionListener listener) {
        cancelBookingButton.addActionListener(listener);
    }





}
