/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.RoomModel;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;

/**
 *
 * @author Dell
 */
public class RoomCard extends javax.swing.JPanel {

    /**
     * Creates new form RoomCard
     */
    public RoomCard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        imageLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        guestLabel = new javax.swing.JLabel();
        roomIDLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(221, 216, 216));
        setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(48, 47, 47));
        jLabel1.setText(" ");

        jLabel2.setForeground(new java.awt.Color(48, 47, 47));

        jLabel3.setForeground(new java.awt.Color(48, 47, 47));

        typeLabel.setForeground(new java.awt.Color(48, 47, 47));
        typeLabel.setText("typeLabel");

        priceLabel.setForeground(new java.awt.Color(48, 47, 47));
        priceLabel.setText("priceLabel");

        guestLabel.setForeground(new java.awt.Color(48, 47, 47));
        guestLabel.setText("guestLabel");

        roomIDLabel.setForeground(new java.awt.Color(48, 47, 47));
        roomIDLabel.setText("roomIdLabel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(guestLabel))
                        .addGap(75, 75, 75)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomIDLabel)
                            .addComponent(typeLabel)
                            .addComponent(priceLabel))))
                .addContainerGap(233, Short.MAX_VALUE))
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(roomIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(typeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(priceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guestLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel guestLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel roomIDLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables

   
      
   
public void setRoomData(RoomModel room) {
 roomIDLabel.setText("Room Number :" + room.getRoomId());
        typeLabel.setText("Room Type: " + room.getRoomType());
        guestLabel.setText("Price Rs. : " + room.getNoOfGuest());
        priceLabel.setText("Max Guest : " + room.getPrice());
    
    String imagePath = room.getImagePath();

    if (imagePath != null && !imagePath.isEmpty()) {
        try {
            String fullPath = System.getProperty("user.dir") + File.separator + "src" + File.separator + "Images" + File.separator + imagePath;
            File imageFile = new File(fullPath);
            
            if (imageFile.exists()) {
                ImageIcon imageIcon = new ImageIcon(fullPath);
                Image img = imageIcon.getImage().getScaledInstance(300, 200, Image.SCALE_SMOOTH);
                imageLabel.setIcon(new ImageIcon(img));
                imageLabel.setText(""); 
            } else {
                imageLabel.setText("No Image Available");
                System.out.println("Image not found at: " + fullPath); 

                imageLabel.setIcon(null);
            }
        } catch (Exception e) {
            imageLabel.setText("No Image Available");
            imageLabel.setIcon(null);
            e.printStackTrace();
        }
    } else {
        imageLabel.setText("No Image Available");
        imageLabel.setIcon(null);
    }
}
}
