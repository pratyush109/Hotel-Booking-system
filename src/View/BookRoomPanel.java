/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import DAO.BookingDao;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
;

/**
 *
 * @author Dell
 */
public class BookRoomPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookRoomPanel
     */
    public BookRoomPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        roomType_label = new javax.swing.JLabel();
        roomType_field = new javax.swing.JTextField();
        roomType_comboBox = new javax.swing.JComboBox<>();
        no_of_guest_label = new javax.swing.JLabel();
        noOfGuest_field = new javax.swing.JTextField();
        noOfGuest_spinner = new javax.swing.JSpinner();
        checkInDate_label = new javax.swing.JLabel();
        checkInDate_field = new javax.swing.JTextField();
        checkInDate_calendar = new com.toedter.calendar.JDateChooser();
        checkOutDate_label = new javax.swing.JLabel();
        checkOutDate_field = new javax.swing.JTextField();
        checkOutDate_calendar = new com.toedter.calendar.JDateChooser();
        sofaImage_label = new javax.swing.JLabel();
        roomType_label1 = new javax.swing.JLabel();
        roomNumber_field = new javax.swing.JTextField();
        bookRoom_Label = new javax.swing.JLabel();
        selectRoom = new javax.swing.JButton();
        bookNowButton = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        roomType_label.setBackground(new java.awt.Color(0, 0, 0));
        roomType_label.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        roomType_label.setText("Room Type:");

        roomType_field.setText("Standard");
        roomType_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomType_fieldActionPerformed(evt);
            }
        });

        roomType_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Deluxe", "Super Deluxe" }));
        roomType_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomType_comboBoxActionPerformed(evt);
            }
        });

        no_of_guest_label.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        no_of_guest_label.setText(" No Of Guest:");

        noOfGuest_field.setText("1");
        noOfGuest_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfGuest_fieldActionPerformed(evt);
            }
        });

        noOfGuest_spinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        noOfGuest_spinner.setOpaque(true);
        noOfGuest_spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                noOfGuest_spinnerStateChanged(evt);
            }
        });

        checkInDate_label.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        checkInDate_label.setText("Check-In-Date:");

        checkInDate_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInDate_fieldActionPerformed(evt);
            }
        });

        checkInDate_calendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkInDate_calendarPropertyChange(evt);
            }
        });

        checkOutDate_label.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        checkOutDate_label.setText("Check-Out-Date:");

        checkOutDate_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutDate_fieldActionPerformed(evt);
            }
        });

        checkOutDate_calendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkOutDate_calendarPropertyChange(evt);
            }
        });

        sofaImage_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/living 3.png"))); // NOI18N

        roomType_label1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        roomType_label1.setText("Room number :");

        roomNumber_field.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        roomNumber_field.setEnabled(false);
        roomNumber_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumber_fieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkOutDate_label, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkInDate_label, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(no_of_guest_label, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomType_label, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(roomType_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(roomType_field, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(noOfGuest_field, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkInDate_field, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkOutDate_field, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkOutDate_calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkInDate_calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(noOfGuest_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomNumber_field, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(35, 35, 35)
                .addComponent(sofaImage_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(50, Short.MAX_VALUE)
                                .addComponent(roomType_label))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(roomType_label1)
                                    .addComponent(roomNumber_field, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomType_field, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(no_of_guest_label)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noOfGuest_field, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noOfGuest_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(checkInDate_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkInDate_field, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(checkInDate_calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addComponent(checkOutDate_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkOutDate_field, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkOutDate_calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sofaImage_label, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        bookRoom_Label.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        bookRoom_Label.setText("Book a Room");

        selectRoom.setBackground(new java.awt.Color(72, 99, 127));
        selectRoom.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        selectRoom.setForeground(new java.awt.Color(255, 255, 255));
        selectRoom.setText("Select Room");
        selectRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRoomActionPerformed(evt);
            }
        });

        bookNowButton.setBackground(new java.awt.Color(72, 99, 127));
        bookNowButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        bookNowButton.setForeground(new java.awt.Color(255, 255, 255));
        bookNowButton.setText("Book Now");
        bookNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(bookRoom_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(selectRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(bookNowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookRoom_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookNowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roomType_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomType_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomType_fieldActionPerformed

    private void roomType_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomType_comboBoxActionPerformed
        // TODO add your handling code here
        String selectedRoomType = roomType_comboBox.getSelectedItem().toString();
        roomType_field.setText(selectedRoomType);
    }//GEN-LAST:event_roomType_comboBoxActionPerformed

    private void noOfGuest_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfGuest_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfGuest_fieldActionPerformed

    private void noOfGuest_spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_noOfGuest_spinnerStateChanged
        // TODO add your handling code here:
        int value = (int)noOfGuest_spinner.getValue();
        noOfGuest_field.setText(String.valueOf(value));
    }//GEN-LAST:event_noOfGuest_spinnerStateChanged

    private void checkInDate_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInDate_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkInDate_fieldActionPerformed

    private void checkInDate_calendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkInDate_calendarPropertyChange
        // TODO add your handling code here:
        if("date".equals(evt.getPropertyName())) {
            Date selectedDate = checkInDate_calendar.getDate();
            if(selectedDate != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String formattedDate = sdf.format(selectedDate);
                checkInDate_field.setText(formattedDate);

            } else {
                checkInDate_field.setText("");
            }
        }
    }//GEN-LAST:event_checkInDate_calendarPropertyChange

    private void checkOutDate_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutDate_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkOutDate_fieldActionPerformed

    private void checkOutDate_calendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkOutDate_calendarPropertyChange
        // TODO add your handling code here:
        if("date".equals(evt.getPropertyName())) {
            Date selectedDate = checkOutDate_calendar.getDate();
            if(selectedDate != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String formattedDate = sdf.format(selectedDate);
                checkOutDate_field.setText(formattedDate);

            } else {
                checkOutDate_field.setText("");
            }
        }
    }//GEN-LAST:event_checkOutDate_calendarPropertyChange

    private void selectRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRoomActionPerformed
        
        BookingDao bookingDao = new BookingDao();
      String roomType = roomType_comboBox.getSelectedItem().toString();
    int guestCount = Integer.parseInt(noOfGuest_field.getText());
    String checkIn = checkInDate_field.getText();    
    String checkOut = checkOutDate_field.getText();

    List<Integer> availableRooms = bookingDao.getAvailableRooms(roomType, guestCount, checkIn, checkOut, null);
    
if (availableRooms.isEmpty()) {
        JOptionPane.showMessageDialog(null, "No rooms available for the selected criteria.");
    } else {
      
        String[] roomOptions = availableRooms.stream()
                                .map(String::valueOf)
                                .toArray(String[]::new);

       
        String selectedRoom = (String) JOptionPane.showInputDialog(
                null,
                "Select a room:",
                "Available Rooms",
                JOptionPane.QUESTION_MESSAGE,
                null,
                roomOptions,
                roomOptions[0]);  

        if (selectedRoom != null) {
            int selectedRoomId = Integer.parseInt(selectedRoom);
              roomNumber_field.setText(selectedRoom);
            JOptionPane.showMessageDialog(null, "You selected Room ID: " + selectedRoomId);

        
        } else {
           
            JOptionPane.showMessageDialog(null, "No room selected.");
        }
}





    }//GEN-LAST:event_selectRoomActionPerformed

    private void bookNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNowButtonActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_bookNowButtonActionPerformed

    private void roomNumber_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumber_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNumber_fieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookNowButton;
    private javax.swing.JLabel bookRoom_Label;
    private com.toedter.calendar.JDateChooser checkInDate_calendar;
    private javax.swing.JTextField checkInDate_field;
    private javax.swing.JLabel checkInDate_label;
    private com.toedter.calendar.JDateChooser checkOutDate_calendar;
    private javax.swing.JTextField checkOutDate_field;
    private javax.swing.JLabel checkOutDate_label;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField noOfGuest_field;
    private javax.swing.JSpinner noOfGuest_spinner;
    private javax.swing.JLabel no_of_guest_label;
    private javax.swing.JTextField roomNumber_field;
    private javax.swing.JComboBox<String> roomType_comboBox;
    private javax.swing.JTextField roomType_field;
    private javax.swing.JLabel roomType_label;
    private javax.swing.JLabel roomType_label1;
    private javax.swing.JButton selectRoom;
    private javax.swing.JLabel sofaImage_label;
    // End of variables declaration//GEN-END:variables

public String getRoomType() {
    return roomType_field.getText();
}

public int getNoOfGuest() {
    return Integer.parseInt(noOfGuest_field.getText());
}
public String getCheckInDate() {
    return checkInDate_field.getText();
}
public String getCheckOutDate() {
    return checkOutDate_field.getText();
}
public int getRoomId() {
    return Integer.parseInt(roomNumber_field.getText());
}

   public void addAddBookingListener(ActionListener listener) {
    bookNowButton.addActionListener(listener);
}

 
}
