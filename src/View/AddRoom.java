/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.AddRoomController;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class AddRoom extends javax.swing.JPanel {
    private AddRoomController addRoomController;


    /**
     * Creates new form AddRoom
     */
    public AddRoom() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        roomType_label = new javax.swing.JLabel();
        roomType_field = new javax.swing.JTextField();
        roomType_comboBox = new javax.swing.JComboBox<>();
        noOfGuest_field = new javax.swing.JTextField();
        no_of_guest_label = new javax.swing.JLabel();
        noOfGuest_spinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        no_of_guest_label1 = new javax.swing.JLabel();
        txtImagePath = new javax.swing.JTextField();
        priceField1 = new javax.swing.JTextField();
        no_of_guest_label2 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        roomType_label1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(884, 547));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        roomType_label.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        roomType_label.setText("Room Type:");

        roomType_field.setEditable(false);
        roomType_field.setBackground(new java.awt.Color(217, 217, 217));
        roomType_field.setText("Standard");
        roomType_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomType_fieldActionPerformed(evt);
            }
        });

        roomType_comboBox.setBackground(new java.awt.Color(192, 180, 180));
        roomType_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Deluxe", "Super Deluxe" }));
        roomType_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomType_comboBoxActionPerformed(evt);
            }
        });

        noOfGuest_field.setEditable(false);
        noOfGuest_field.setBackground(new java.awt.Color(217, 217, 217));
        noOfGuest_field.setText("1");
        noOfGuest_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfGuest_fieldActionPerformed(evt);
            }
        });

        no_of_guest_label.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        no_of_guest_label.setText(" No Of Guest:");

        noOfGuest_spinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        noOfGuest_spinner.setOpaque(true);
        noOfGuest_spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                noOfGuest_spinnerStateChanged(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hotel_1.png"))); // NOI18N

        no_of_guest_label1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        no_of_guest_label1.setText("Image");

        txtImagePath.setEditable(false);
        txtImagePath.setBackground(new java.awt.Color(217, 217, 217));
        txtImagePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImagePathActionPerformed(evt);
            }
        });

        priceField1.setEditable(false);
        priceField1.setBackground(new java.awt.Color(217, 217, 217));
        priceField1.setText("60");
        priceField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceField1ActionPerformed(evt);
            }
        });

        no_of_guest_label2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        no_of_guest_label2.setText("Price");

        addButton.setBackground(new java.awt.Color(72, 99, 127));
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add Room");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jToggleButton1.setText("browse....");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(204, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(326, 326, 326))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(no_of_guest_label, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(noOfGuest_field, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(noOfGuest_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(roomType_label, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(roomType_field, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(roomType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(priceField1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(no_of_guest_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(no_of_guest_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(140, 140, 140)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)
                        .addGap(43, 43, 43)
                        .addComponent(addButton)
                        .addGap(17, 17, 17))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomType_label)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomType_field, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(no_of_guest_label)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noOfGuest_field, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noOfGuest_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(no_of_guest_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(no_of_guest_label1)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton)
                    .addComponent(jToggleButton1))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        roomType_label1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        roomType_label1.setText("Add Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(roomType_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(roomType_label1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roomType_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomType_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomType_fieldActionPerformed

    private void roomType_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomType_comboBoxActionPerformed
        // TODO add your handling code here
        String selectedRoomType = roomType_comboBox.getSelectedItem().toString();
        roomType_field.setText(selectedRoomType);
        if(selectedRoomType.equals("Standard")) {
            priceField1.setText("60");
        } else if(selectedRoomType.equals("Deluxe")) {
            priceField1.setText("100");
        } else if(selectedRoomType.equals("Super Deluxe")) {
            priceField1.setText("140");
        }
    }//GEN-LAST:event_roomType_comboBoxActionPerformed

    private void noOfGuest_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfGuest_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfGuest_fieldActionPerformed

    private void noOfGuest_spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_noOfGuest_spinnerStateChanged
        // TODO add your handling code here:
        int value = (int)noOfGuest_spinner.getValue();
        noOfGuest_field.setText(String.valueOf(value));
    }//GEN-LAST:event_noOfGuest_spinnerStateChanged

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if (addRoomController == null) {
        addRoomController = new AddRoomController(this);
    }
    }//GEN-LAST:event_addButtonActionPerformed

    private void priceField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceField1ActionPerformed

    private void txtImagePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImagePathActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtImagePathActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(
        "Image files", "jpg", "jpeg", "png", "gif"));
    
    int result = fileChooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        
        try {
            String fileName = System.currentTimeMillis() + "_" + selectedFile.getName();
            
            String projectPath = System.getProperty("user.dir");
            
            File imagesDir = new File(projectPath, "images");
            
            if (!imagesDir.exists()) {
                boolean created = imagesDir.mkdirs();
            }
            
            File destFile = new File(imagesDir, fileName);
            
            Files.copy(selectedFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
            
            if (destFile.exists()) {
                txtImagePath.setText(fileName);
                JOptionPane.showMessageDialog(this, "Image uploaded successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Image was not copied properly!");
            }
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error copying image: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField noOfGuest_field;
    private javax.swing.JSpinner noOfGuest_spinner;
    private javax.swing.JLabel no_of_guest_label;
    private javax.swing.JLabel no_of_guest_label1;
    private javax.swing.JLabel no_of_guest_label2;
    private javax.swing.JTextField priceField1;
    private javax.swing.JComboBox<String> roomType_comboBox;
    private javax.swing.JTextField roomType_field;
    private javax.swing.JLabel roomType_label;
    private javax.swing.JLabel roomType_label1;
    private javax.swing.JTextField txtImagePath;
    // End of variables declaration//GEN-END:variables
    public void addAddRoomListener(ActionListener listener) {
        addButton.addActionListener(listener);
    }

    //getter and setter for roomType
    public String getRoomType() {
        return roomType_field.getText();
    }
    public void setRoomType(String roomType) {
        roomType_field.setText(roomType);
    }
    
    //getter and setter for guests
    public int getGuests() {
        return Integer.parseInt(noOfGuest_field.getText());
    }
    public void setGuests(int guests) {
        noOfGuest_field.setText(String.valueOf(guests));
    }
    
    //getter and setter for price
    public int getPrice() {
        return Integer.parseInt(priceField1.getText());
    }
    public void setPrice(int price) {
        priceField1.setText(String.valueOf(price));
    }
    
    //getter and setter for image path
    public String getImagePath() {
        return txtImagePath.getText();
    }
    public void setImagePath(String image_path) {
        txtImagePath.setText(image_path);
    }
    
    public void clearImagePathField() {
    txtImagePath.setText("");
}

}
